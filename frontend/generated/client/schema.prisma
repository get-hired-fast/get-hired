// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

datasource db {
  provider = "postgresql" // You can change this to "mysql" or "sqlite"
  url      = env("DATABASE_URL")
}

model UserProfile {
  id     String @id @default(cuid())
  userId String @unique // Clerk user ID

  // Step 1: Basic Details
  profilePicture String?
  firstName      String
  lastName       String
  age            Int?
  dateOfBirth    DateTime?
  address        String?
  city           String?
  state          String?
  country        String?
  phone          String?

  // Step 3: Professional Details
  skills            String[] // Array of skills
  preferredJobRoles String[] // Array of preferred job roles
  bio               String?
  currentRole       String?
  experience        String?

  // Step 4: Social Links
  linkedinUrl  String?
  githubUrl    String?
  leetcodeUrl  String?
  portfolioUrl String?
  twitterUrl   String?

  // Step 5: Resume
  resumeUrl      String?
  resumeFileName String?

  // Profile Status
  isProfileComplete Boolean @default(false)
  profileViews      Int     @default(0)

  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  education Education[]

  @@map("user_profiles")
}

model Education {
  id                  String    @id @default(cuid())
  institution         String
  degree              String
  fieldOfStudy        String
  startDate           DateTime
  endDate             DateTime?
  isCurrentlyStudying Boolean   @default(false)
  grade               String?
  description         String?

  // Relations
  userProfile   UserProfile @relation(fields: [userProfileId], references: [id], onDelete: Cascade)
  userProfileId String

  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("education")
}

// Optional: Add more models for future features
model Application {
  id     String @id @default(cuid())
  userId String

  // Application details
  jobTitle    String
  company     String
  jobType     String // "internship", "job", "hackathon", "challenge"
  status      String // "applied", "pending", "interview", "rejected", "accepted"
  appliedAt   DateTime  @default(now())
  deadline    DateTime?
  description String?
  location    String?
  salary      String?

  // External links
  jobUrl         String?
  applicationUrl String?
  interviewDate  DateTime?
  // Timestamps
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  @@map("applications")
}

model SavedOpportunity {
  id     String @id @default(cuid())
  userId String

  // Opportunity details
  title        String
  company      String
  type         String // "internship", "job", "hackathon", "challenge"
  location     String?
  deadline     DateTime?
  description  String?
  requirements String?
  salary       String?
  jobId        String

  // External links
  opportunityUrl String?
  applicationUrl String?

  // Timestamps
  savedAt   DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("saved_opportunities")
}
